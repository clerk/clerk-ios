#!/bin/sh

set -e

# Ensure we run from the repository root
REPO_ROOT=$(git rev-parse --show-toplevel)
cd "$REPO_ROOT"

# Collect staged Swift files
STAGED_SWIFT_FILES=$(git diff --cached --name-only --diff-filter=ACMR | grep -E '\\.swift$' || true)

if [ -z "$STAGED_SWIFT_FILES" ]; then
  exit 0
fi

if command -v swiftformat >/dev/null 2>&1; then
  echo "Running SwiftFormat on staged files (2-space indentation)..."
  swiftformat --config "$REPO_ROOT/.swiftformat" $STAGED_SWIFT_FILES >/dev/null || true
  git add $STAGED_SWIFT_FILES
else
  echo "SwiftFormat not found. Install with: brew install swiftformat"
fi

if ! command -v swiftlint >/dev/null 2>&1; then
  echo "SwiftLint not found. Install with: brew install swiftlint"
  exit 0
fi

echo "Running SwiftLint autocorrect on staged files..."
for FILE in $STAGED_SWIFT_FILES; do
  if [ -f "$FILE" ]; then
    swiftlint autocorrect --config "$REPO_ROOT/.swiftlint.yml" --path "$FILE" || true
    git add "$FILE"
  fi
done

echo "Running SwiftLint lint --strict on staged files..."
FAILED=0
for FILE in $STAGED_SWIFT_FILES; do
  if [ -f "$FILE" ]; then
    if ! swiftlint lint --strict --config "$REPO_ROOT/.swiftlint.yml" --path "$FILE"; then
      FAILED=1
    fi
  fi
done

if [ "$FAILED" -ne 0 ]; then
  echo "SwiftLint found issues. Please fix them before committing."
  exit 1
fi

exit 0


